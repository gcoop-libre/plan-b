#!/bin/bash

# This script comes with ABSOLUTELY NO WARRANTY, use at own risk
# Copyright (C) 2014 Osiris Alejandro Gomez <osiris@gcoop.coop>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

ONLY_SUMMARY=0
ONLY_LAST=0
VERBOSE=0
DELETE=0
DIR=$PWD

while getopts "Dd:lsv" OPTION
do
  case $OPTION in
    D)
      DELETE=1
    ;;
    d)
      DIR=`echo $OPTARG | sed 's/\/\+$//g'`
    ;;
    l)
      ONLY_LAST=1
    ;;
    s)
      ONLY_SUMMARY=1
    ;;
    v)
      VERBOSE=1
    ;;
  esac
done

[ ! -d "$DIR" ] && exit 1

DF=`df -h "$DIR" | awk '{print $4}' | tail -1`
cd $DIR

VLS="/tmp/vz-rm-ls-$BASHPID.tmp"
VOK="/tmp/vz-rm-ok-$BASHPID.tmp"
VRM="/tmp/vz-rm-rm-$BASHPID.tmp"

# EXAMPLE: vzdump-openvz-118-2014_10_18-01_03_08.tar
PATTERN='vzdump-(openvz|qemu)-[0-9]{3}-[0-9]{4}_[0-9]{2}_[0-9]{2}-[0-9]{2}_[0-9]{2}_[0-9]{2}.(tar|tar.gz|tgz|vma)'
ls -l vzdump-* 2>/dev/null | sort -k 9 | egrep "$PATTERN" > $VLS

TOTAL_VLS=`wc -l $VLS | awk '{print $1}'`

[ $TOTAL_VLS -eq 0 ] && exit 0

printf "\n"
printf "hostname  : %s\n" `hostname`
printf "directory : %s\n" $DIR

SIZE_VLS=`cat $VLS | awk '{print $5}' | awk '{S+=$1/1024/1024/1024} END {printf "%0d\n",S}'`
printf "total VMs : %3s %4s GB\n" $TOTAL_VLS $SIZE_VLS

VEIDS=`cat $VLS  | awk '{print $9}' | egrep -o "\-[0-9]{3}-" | tr -d '-' | sort -u`
DAYS=`cat $VLS   | awk '{print $9}' | egrep -o "[0-9]{4}_[0-9]{2}_[0-9]{2}" | sort -u`
MONTHS=`cat $VLS | awk '{print $9}' | egrep -o "[0-9]{4}_[0-9]{2}" | sort -u`
YEARS=`cat $VLS  | awk '{print $9}' | egrep -o "[0-9]{4}" | sort -u`

>$VOK

for VEID in $VEIDS
do
    if [ $ONLY_LAST -eq 0 ]
    then

      for MONTH in $MONTHS
      do
       FILE=$(cat $VLS | egrep $VEID-$MONTH | awk '{print $9}' | tail -1)
       DATE=$(echo $FILE | egrep -o "[0-9]{4}_[0-9]{2}_[0-9]{2}" | cut -c 6-)
       [[ -n $FILE ]] && echo $FILE >>$VOK
      done

    else
      
      for YEAR in $YEARS
      do
       FILE=$(cat $VLS | egrep $VEID-$YEAR | awk '{print $9}' | tail -1)
       DATE=$(echo $FILE | egrep -o "[0-9]{4}_[0-9]{2}_[0-9]{2}" | cut -c 6-)
       [[ -n $FILE ]] && echo $FILE >>$VOK
      done

    fi
done

TOTAL_VOK=`wc -l $VOK | awk '{print $1}'`
SIZE_VOK=`cat $VLS | grep -f $VOK | awk '{print $5}' | awk '{S+=$1/1024/1024/1024} END {printf "%0d\n",S}'`
BAR_VOK=`echo $SIZE_VOK | barrita -v t=$SIZE_VLS`
printf "total OK  : %3s %4s GB %s\n" "$TOTAL_VOK" "$SIZE_VOK" "$BAR_VOK"

awk '{print $9}' $VLS | grep -v -f $VOK >$VRM

TOTAL_VRM=`wc -l $VRM | awk '{print $1}'`
SIZE_VRM=`cat $VLS | grep -f $VRM | awk '{print $5}' | awk '{S+=$1/1024/1024/1024} END {printf "%0d\n",S}'`
BAR_VRM=`echo $SIZE_VRM | barrita -v t=$SIZE_VLS`
printf "total RM  : %3s %4s GB %s\n" "$TOTAL_VRM" "$SIZE_VRM" "$BAR_VRM"

printf "disk free : %s\n" $DF
printf "\n"

if [ $ONLY_SUMMARY -eq 0 ]
then
    printf "VMs to preserve\n"

    VEIDS=`cat $VOK | egrep -o "\-[0-9]{3}-" | tr -d '-' | sort -u`
    DAYS=`cat $VOK  | egrep -o "[0-9]{4}_[0-9]{2}_[0-9]{2}" | sort -u`

    for VEID in $VEIDS
    do
        printf "%s " $VEID
        for DAY in $DAYS
        do
            FILE=`cat $VOK | egrep $VEID-$DAY`
            DATE=`echo $FILE | egrep -o "[0-9]{4}_[0-9]{2}_[0-9]{2}" | cut -c 6- | tr _ /`
            [[ -n "$FILE" ]] && printf "%5s " $DATE
        done
        printf "\n"
    done

    printf "\n"
fi

[[ $TOTAL_VRM -eq 0 ]] && exit 0

if [ $ONLY_SUMMARY -eq 0 ]
then
    printf "VMs to delete\n"

    VEIDS=`cat $VRM  | egrep -o "\-[0-9]{3}-" | tr -d '-' | sort -u`
    DAYS=`cat $VRM   | egrep -o "[0-9]{4}_[0-9]{2}_[0-9]{2}" | sort -u`

    for VEID in $VEIDS
    do
      printf "%s " $VEID
      for DAY in $DAYS
      do
       FILE=`cat $VRM | egrep $VEID-$DAY`
       DATE=`echo $FILE | egrep -o "[0-9]{4}_[0-9]{2}_[0-9]{2}" | cut -c 6- | tr _ /`
       [[ -n "$FILE" ]] && printf "%5s " $DATE
      done
      printf "\n"
    done
fi

if [ $DELETE -eq 1 ]
then
  cat $VRM | while read F
  do
    [[ $VERBOSE -eq 1 ]] && echo rm $F
    rm $F >/dev/null 2>/dev/null
    OK=`echo $?`
    if [ $OK -ne 0 ]
    then
      echo "ERROR rm $F"
      exit 1
    fi
  done
fi

rm $VLS
rm $VOK
rm $VRM

